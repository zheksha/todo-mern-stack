[{"/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/index.js":"1","/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/App.js":"2","/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/TodosList/TodosList.jsx":"3","/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/EditTodo/EditTodo.jsx":"4","/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/CreateTodo/CreateTodo.jsx":"5","/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/Utilities/NavigationBar.jsx":"6","/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/Utilities/Input.jsx":"7","/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/Utilities/Select.jsx":"8","/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/Utilities/Toast.jsx":"9","/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/TodoItem/TodoItem.jsx":"10","/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/About/About.jsx":"11"},{"size":249,"mtime":1611436473544,"results":"12","hashOfConfig":"13"},{"size":812,"mtime":1611769004808,"results":"14","hashOfConfig":"13"},{"size":1972,"mtime":1611702852931,"results":"15","hashOfConfig":"13"},{"size":145,"mtime":1611437710279,"results":"16","hashOfConfig":"13"},{"size":2196,"mtime":1611703003043,"results":"17","hashOfConfig":"13"},{"size":1595,"mtime":1611769016902,"results":"18","hashOfConfig":"13"},{"size":600,"mtime":1611553142145,"results":"19","hashOfConfig":"13"},{"size":424,"mtime":1611443521892,"results":"20","hashOfConfig":"13"},{"size":930,"mtime":1611697333170,"results":"21","hashOfConfig":"13"},{"size":3639,"mtime":1611702577081,"results":"22","hashOfConfig":"13"},{"size":528,"mtime":1611769417804,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1bsaeyc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/index.js",[],["50","51"],"/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/App.js",[],"/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/TodosList/TodosList.jsx",["52"],"import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./todoList.scss\";\n\nconst TodosList = (props) => {\n  const [todoList, setTodoList] = useState([]);\n\n  let mounted = useRef();\n  useEffect(() => {\n    if (!mounted.current) {\n      const fetchData = async () => {\n        const result = await axios(\"http://localhost:4000/todos/\");\n        setTodoList([...result.data].reverse());\n      };\n      fetchData();\n    } else {\n      const fetchData = async () => {\n        const result = await axios(\"http://localhost:4000/todos/\");\n        setTodoList([...result.data].reverse());\n      };\n      fetchData();\n    }\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <div>\n      {todoList.reverse().map((todo, index) => (\n        <div\n          key={todo._id}\n          className={`row  py-2 my-1 d-flex align-items-center  ${\n            todo.todo_completed\n              ? \"completed\"\n              : index % 2 > 0\n              ? \"bg-light\"\n              : \"bg-secondary\"\n          }`}\n        >\n          <div className=\"col-md-8 lead d-flex align-items-center  \">\n            <p className=\"mr-2 text-muted badge m-0\">{index + 1}.</p>\n            {todo.todo_description}\n          </div>\n          <div className=\"col-md-2\">\n            {\" \"}\n            <span className={`badge mr-2 ${todo.todo_priority.toLowerCase()} `}>\n              {todo.todo_priority}\n            </span>\n            {todo.todo_completed ? (\n              <span className={`badge bg-success`}>Completed</span>\n            ) : (\n              \"\"\n            )}\n          </div>\n          <div className=\"col-md-2\">\n            <Link className=\"nav-link my-0 py-0\" to={`/edit/${todo._id}`}>\n              <i className=\"fas fa-edit mr-2\"></i>Edit\n            </Link>\n          </div>\n        </div>\n      ))}\n\n      {\n        //\n        //\n      }\n    </div>\n  );\n};\n\nexport default TodosList;\n","/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/EditTodo/EditTodo.jsx",[],["53","54"],"/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/CreateTodo/CreateTodo.jsx",[],"/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/Utilities/NavigationBar.jsx",[],"/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/Utilities/Input.jsx",[],"/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/Utilities/Select.jsx",[],"/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/Utilities/Toast.jsx",[],"/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/TodoItem/TodoItem.jsx",["55"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { Input } from \"../Utilities/Input\";\nimport { Select } from \"../Utilities/Select\";\nimport { ToastSuccess, ToastWarning } from \"../Utilities/Toast\";\nimport \"./todoItem.style.scss\";\n\nexport const TodoItem = (props) => {\n  const [currentTodo, setCurrentTodo] = useState({\n    todo_description: \"\",\n    todo_priority: \"\",\n    todo_completed: \"\",\n  });\n\n  const [showToastWarning, setShowToastWarning] = useState(false);\n  const [showToastSuccess, setShowToastSuccess] = useState(false);\n\n  //get todo by id from mongo and assign to state\n  useEffect(() => {\n    const fetchCurrentTodo = async () => {\n      const result = await axios(\n        `http://localhost:4000/todos/${props.match.params.id}`\n      );\n      setCurrentTodo({ ...currentTodo, ...result.data });\n    };\n    fetchCurrentTodo();\n  }, []);\n\n  const onInputChange = (e) => {\n    setCurrentTodo({ ...currentTodo, [e.target.name]: e.target.value });\n  };\n\n  const onSelectChange = (e) => {\n    if (e.target.value === \"Choose priority\")\n      e.target.value = \"No priority given\";\n    setCurrentTodo({ ...currentTodo, todo_priority: e.target.value });\n  };\n\n  const onCheckClick = (e) => {\n    setCurrentTodo({\n      ...currentTodo,\n      todo_completed: !currentTodo.todo_completed,\n    });\n  };\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    if (!currentTodo.todo_description || !currentTodo.todo_priority)\n      return setShowToastWarning(true);\n    axios\n      .post(\n        `http://localhost:4000/todos/update/${props.match.params.id}`,\n        currentTodo\n      )\n      .then((res) => console.log(res.data));\n    setShowToastSuccess(true);\n    setTimeout(() => {\n      props.history.push(\"/\");\n    }, 1200);\n  };\n\n  const alertBlock = (\n    <div>\n      {showToastWarning ? (\n        <ToastWarning onClick={() => setShowToastWarning(false)} />\n      ) : null}\n      {showToastSuccess ? (\n        <ToastSuccess onClick={() => setShowToastSuccess(false)} />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n\n  const deleteTask = () => {\n    axios.delete(`http://localhost:4000/todos/delete/${props.match.params.id}`);\n    setTimeout(() => {\n      props.history.push(\"/\");\n    }, 200);\n  };\n\n  return (\n    <div>\n      {alertBlock}\n      <Input\n        name=\"todo_description\"\n        label=\"Description\"\n        onChange={onInputChange}\n        value={currentTodo.todo_description}\n      />\n\n      <Select\n        value={currentTodo.todo_priority}\n        name=\"todo_priority\"\n        label=\"Choose priority\"\n        onChange={onSelectChange}\n      />\n\n      <div className=\"my-4\">\n        <div className=\"form-check d-flex align-items-center\">\n          <input\n            checked={currentTodo.todo_completed}\n            onChange={onCheckClick}\n            className=\"form-check-input input-box mt-0 \"\n            type=\"checkbox\"\n            id=\"flexCheckDefault\"\n          />\n          <label\n            className=\"form-check-label ml-3 p-0 lead text-dark\"\n            htmlFor=\"flexCheckDefault\"\n          >\n            <strong>Completed</strong>\n          </label>\n        </div>\n      </div>\n\n      <button onClick={onFormSubmit} className=\"btn btn-success\">\n        Update task\n      </button>\n\n      <button onClick={onCheckClick} className=\"btn btn-info ml-3\">\n        {currentTodo.todo_completed\n          ? \"Mark as uncompleted\"\n          : \"Mark as completed\"}\n      </button>\n\n      <button onClick={deleteTask} className=\"ml-3 btn btn-danger\">\n        <i className=\"fas fa-toilet mr-1\"></i> Flush task\n      </button>\n    </div>\n  );\n};\n\nexport default TodoItem;\n","/Users/zheksha/Internet Technology/Practice/to-do-app-with-backend/frontend/src/components/About/About.jsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":26,"column":17,"nodeType":"62","endLine":26,"endColumn":22},{"ruleId":"56","replacedBy":"63"},{"ruleId":"58","replacedBy":"64"},{"ruleId":"60","severity":1,"message":"65","line":28,"column":6,"nodeType":"66","endLine":28,"endColumn":8,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"react-hooks/exhaustive-deps","Assignments to the 'mounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal",["68"],["69"],"React Hook useEffect has missing dependencies: 'currentTodo' and 'props.match.params.id'. Either include them or remove the dependency array. You can also do a functional update 'setCurrentTodo(c => ...)' if you only need 'currentTodo' in the 'setCurrentTodo' call.","ArrayExpression",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [currentTodo, props.match.params.id]",{"range":"73","text":"74"},[884,886],"[currentTodo, props.match.params.id]"]